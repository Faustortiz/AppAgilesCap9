//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LightSwitchApplication
{
    #region Data Services
    
    /// <summary>
    /// Proporciona miembros para consultar y actualizar datos en el origen de datos ApplicationData.
    /// </summary>
    public sealed partial class ApplicationDataService
        : global::LightSwitchApplication.ApplicationData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public ApplicationDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Obtiene el objeto Application para esta aplicación. El objeto Application proporciona acceso a pantallas activas, métodos para abrir pantallas y acceso al usuario actual.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Obtiene el área de trabajo de datos contenedora. Dicha área proporciona acceso a todos los orígenes de datos de la aplicación.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Inserting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Inserted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Updating(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Updated(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Deleting(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Deleted(global::LightSwitchApplication.Customer entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Validate(global::LightSwitchApplication.Customer entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void CustomerSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Inserting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Inserted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Updating(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Updated(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Deleting(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Deleted(global::LightSwitchApplication.Invoice entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Validate(global::LightSwitchApplication.Invoice entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void InvoiceSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Inserting(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Inserted(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Updating(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Updated(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Deleting(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Deleted(global::LightSwitchApplication.OrderDetail entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Validate(global::LightSwitchApplication.OrderDetail entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderDetailSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Inserting(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Inserted(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Updating(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Updated(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Deleting(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Deleted(global::LightSwitchApplication.OrderHeader entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Validate(global::LightSwitchApplication.OrderHeader entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void OrderHeaderSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderHeader, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Inserting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Inserted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Updating(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Updated(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Deleting(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Deleted(global::LightSwitchApplication.Product entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Validate(global::LightSwitchApplication.Product entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ProductSet_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void ApplicationData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>
                __CustomerSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Customer>(
                    "CustomerSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__CustomerSet_Filter);
            private static bool __CustomerSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerSet_CanInsert(ref result);
                return result;
            }
            private static bool __CustomerSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerSet_CanUpdate(ref result);
                return result;
            }
            private static bool __CustomerSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerSet_CanDelete(ref result);
                return result;
            }
            private static bool __CustomerSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.CustomerSet_CanRead(ref result);
                return result;
            }
            private static void __CustomerSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Inserting(e);
            }
            private static void __CustomerSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Inserted(e);
            }
            private static void __CustomerSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Updating(e);
            }
            private static void __CustomerSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Updated(e);
            }
            private static void __CustomerSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Deleting(e);
            }
            private static void __CustomerSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e)
            {
                d.CustomerSet_Deleted(e);
            }
            private static void __CustomerSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Customer e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.CustomerSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> __CustomerSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Customer, bool>> filter = null;
                d.CustomerSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>
                __InvoiceSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Invoice>(
                    "InvoiceSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__InvoiceSet_Filter);
            private static bool __InvoiceSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceSet_CanInsert(ref result);
                return result;
            }
            private static bool __InvoiceSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceSet_CanUpdate(ref result);
                return result;
            }
            private static bool __InvoiceSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceSet_CanDelete(ref result);
                return result;
            }
            private static bool __InvoiceSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.InvoiceSet_CanRead(ref result);
                return result;
            }
            private static void __InvoiceSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Inserting(e);
            }
            private static void __InvoiceSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Inserted(e);
            }
            private static void __InvoiceSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Updating(e);
            }
            private static void __InvoiceSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Updated(e);
            }
            private static void __InvoiceSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Deleting(e);
            }
            private static void __InvoiceSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e)
            {
                d.InvoiceSet_Deleted(e);
            }
            private static void __InvoiceSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Invoice e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.InvoiceSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> __InvoiceSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Invoice, bool>> filter = null;
                d.InvoiceSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderDetail>
                __OrderDetailSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderDetail>(
                    "OrderDetailSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderDetailSet_Filter);
            private static bool __OrderDetailSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetailSet_CanInsert(ref result);
                return result;
            }
            private static bool __OrderDetailSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetailSet_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderDetailSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetailSet_CanDelete(ref result);
                return result;
            }
            private static bool __OrderDetailSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderDetailSet_CanRead(ref result);
                return result;
            }
            private static void __OrderDetailSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Inserting(e);
            }
            private static void __OrderDetailSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Inserted(e);
            }
            private static void __OrderDetailSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Updating(e);
            }
            private static void __OrderDetailSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Updated(e);
            }
            private static void __OrderDetailSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Deleting(e);
            }
            private static void __OrderDetailSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e)
            {
                d.OrderDetailSet_Deleted(e);
            }
            private static void __OrderDetailSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderDetail e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderDetailSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> __OrderDetailSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderDetail, bool>> filter = null;
                d.OrderDetailSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderHeader>
                __OrderHeaderSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.OrderHeader>(
                    "OrderHeaderSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__OrderHeaderSet_Filter);
            private static bool __OrderHeaderSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderHeaderSet_CanInsert(ref result);
                return result;
            }
            private static bool __OrderHeaderSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderHeaderSet_CanUpdate(ref result);
                return result;
            }
            private static bool __OrderHeaderSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderHeaderSet_CanDelete(ref result);
                return result;
            }
            private static bool __OrderHeaderSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.OrderHeaderSet_CanRead(ref result);
                return result;
            }
            private static void __OrderHeaderSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Inserting(e);
            }
            private static void __OrderHeaderSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Inserted(e);
            }
            private static void __OrderHeaderSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Updating(e);
            }
            private static void __OrderHeaderSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Updated(e);
            }
            private static void __OrderHeaderSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Deleting(e);
            }
            private static void __OrderHeaderSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e)
            {
                d.OrderHeaderSet_Deleted(e);
            }
            private static void __OrderHeaderSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.OrderHeader e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.OrderHeaderSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderHeader, bool>> __OrderHeaderSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.OrderHeader, bool>> filter = null;
                d.OrderHeaderSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>
                __ProductSetEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.ApplicationDataService, global::LightSwitchApplication.Product>(
                    "ProductSet",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_CanInsert,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_CanUpdate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_CanDelete,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_CanRead,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Inserting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Inserted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Updating,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Updated,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Deleting,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Deleted,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Validate,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ProductSet_Filter);
            private static bool __ProductSet_CanInsert(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSet_CanInsert(ref result);
                return result;
            }
            private static bool __ProductSet_CanUpdate(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSet_CanUpdate(ref result);
                return result;
            }
            private static bool __ProductSet_CanDelete(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSet_CanDelete(ref result);
                return result;
            }
            private static bool __ProductSet_CanRead(global::LightSwitchApplication.ApplicationDataService d)
            {
                bool result = true;
                d.ProductSet_CanRead(ref result);
                return result;
            }
            private static void __ProductSet_Inserting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Inserting(e);
            }
            private static void __ProductSet_Inserted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Inserted(e);
            }
            private static void __ProductSet_Updating(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Updating(e);
            }
            private static void __ProductSet_Updated(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Updated(e);
            }
            private static void __ProductSet_Deleting(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Deleting(e);
            }
            private static void __ProductSet_Deleted(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e)
            {
                d.ProductSet_Deleted(e);
            }
            private static void __ProductSet_Validate(global::LightSwitchApplication.ApplicationDataService d, global::LightSwitchApplication.Product e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.ProductSet_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> __ProductSet_Filter(global::LightSwitchApplication.ApplicationDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product, bool>> filter = null;
                d.ProductSet_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.ApplicationDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.ApplicationDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.ApplicationDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.ApplicationDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.ApplicationDataService>(
                    global::LightSwitchApplication.ApplicationDataService.DetailsClass.__ApplicationData_InitializingConnection);
            private static void __ApplicationData_InitializingConnection(global::LightSwitchApplication.ApplicationDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.ApplicationData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Proporciona miembros para consultar y actualizar datos en el origen de datos NorthwindData.
    /// </summary>
    public sealed partial class NorthwindDataService
        : global::LightSwitchApplication.NorthwindData
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindDataService() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Obtiene el objeto Application para esta aplicación. El objeto Application proporciona acceso a pantallas activas, métodos para abrir pantallas y acceso al usuario actual.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Obtiene el área de trabajo de datos contenedora. Dicha área proporciona acceso a todos los orígenes de datos de la aplicación.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserting(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Inserted(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updating(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Updated(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleting(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Deleted(global::LightSwitchApplication.CategoriesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Validate(global::LightSwitchApplication.CategoriesItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Categories_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CategoriesItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Sales_for_1997_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Sales_for_1997_Validate(global::LightSwitchApplication.Product_Sales_for_1997Item entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Product_Sales_for_1997_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product_Sales_for_1997Item, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserting(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Inserted(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updating(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Updated(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleting(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Deleted(global::LightSwitchApplication.ProductsItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Validate(global::LightSwitchApplication.ProductsItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Products_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductsItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NorthwindData_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.CategoriesItem>
                __CategoriesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.CategoriesItem>(
                    "Categories",
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_CanInsert,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_CanUpdate,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_CanDelete,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_CanRead,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Inserting,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Inserted,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Updating,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Updated,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Deleting,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Deleted,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Validate,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Categories_Filter);
            private static bool __Categories_CanInsert(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Categories_CanInsert(ref result);
                return result;
            }
            private static bool __Categories_CanUpdate(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Categories_CanUpdate(ref result);
                return result;
            }
            private static bool __Categories_CanDelete(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Categories_CanDelete(ref result);
                return result;
            }
            private static bool __Categories_CanRead(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Categories_CanRead(ref result);
                return result;
            }
            private static void __Categories_Inserting(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Inserting(e);
            }
            private static void __Categories_Inserted(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Inserted(e);
            }
            private static void __Categories_Updating(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Updating(e);
            }
            private static void __Categories_Updated(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Updated(e);
            }
            private static void __Categories_Deleting(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Deleting(e);
            }
            private static void __Categories_Deleted(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e)
            {
                d.Categories_Deleted(e);
            }
            private static void __Categories_Validate(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.CategoriesItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Categories_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CategoriesItem, bool>> __Categories_Filter(global::LightSwitchApplication.NorthwindDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.CategoriesItem, bool>> filter = null;
                d.Categories_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.Product_Sales_for_1997Item>
                __Product_Sales_for_1997Entry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.Product_Sales_for_1997Item>(
                    "Product_Sales_for_1997",
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Product_Sales_for_1997_CanRead,
                    null,
                    null,
                    null,
                    null,
                    null,
                    null,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Product_Sales_for_1997_Validate,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Product_Sales_for_1997_Filter);
            private static bool __Product_Sales_for_1997_CanRead(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Product_Sales_for_1997_CanRead(ref result);
                return result;
            }
            private static void __Product_Sales_for_1997_Validate(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.Product_Sales_for_1997Item e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Product_Sales_for_1997_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product_Sales_for_1997Item, bool>> __Product_Sales_for_1997_Filter(global::LightSwitchApplication.NorthwindDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.Product_Sales_for_1997Item, bool>> filter = null;
                d.Product_Sales_for_1997_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.ProductsItem>
                __ProductsEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindDataService, global::LightSwitchApplication.ProductsItem>(
                    "Products",
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_CanInsert,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_CanUpdate,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_CanDelete,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_CanRead,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Inserting,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Inserted,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Updating,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Updated,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Deleting,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Deleted,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Validate,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Products_Filter);
            private static bool __Products_CanInsert(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Products_CanInsert(ref result);
                return result;
            }
            private static bool __Products_CanUpdate(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Products_CanUpdate(ref result);
                return result;
            }
            private static bool __Products_CanDelete(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Products_CanDelete(ref result);
                return result;
            }
            private static bool __Products_CanRead(global::LightSwitchApplication.NorthwindDataService d)
            {
                bool result = true;
                d.Products_CanRead(ref result);
                return result;
            }
            private static void __Products_Inserting(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Inserting(e);
            }
            private static void __Products_Inserted(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Inserted(e);
            }
            private static void __Products_Updating(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Updating(e);
            }
            private static void __Products_Updated(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Updated(e);
            }
            private static void __Products_Deleting(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Deleting(e);
            }
            private static void __Products_Deleted(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e)
            {
                d.Products_Deleted(e);
            }
            private static void __Products_Validate(global::LightSwitchApplication.NorthwindDataService d, global::LightSwitchApplication.ProductsItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Products_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductsItem, bool>> __Products_Filter(global::LightSwitchApplication.NorthwindDataService d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.ProductsItem, bool>> filter = null;
                d.Products_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.NorthwindDataService>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.NorthwindDataService>(
                    "SaveChanges",
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.NorthwindDataService d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.NorthwindDataService d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.NorthwindDataService d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.NorthwindDataService d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.NorthwindDataService>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.NorthwindDataService>(
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.NorthwindDataService d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.NorthwindDataService d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.NorthwindDataService d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.NorthwindDataService>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.NorthwindDataService>(
                    global::LightSwitchApplication.NorthwindDataService.DetailsClass.__NorthwindData_InitializingConnection);
            private static void __NorthwindData_InitializingConnection(global::LightSwitchApplication.NorthwindDataService d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.NorthwindData_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    /// <summary>
    /// Proporciona miembros para consultar y actualizar datos en el origen de datos NorthwindData1.
    /// </summary>
    public sealed partial class NorthwindData1Service
        : global::LightSwitchApplication.NorthwindData1
    {
        #region Constructors
    
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        public NorthwindData1Service() : base()
        {
        }
    
        #endregion
    
        #region Private Properties
        
        /// <summary>
        /// Obtiene el objeto Application para esta aplicación. El objeto Application proporciona acceso a pantallas activas, métodos para abrir pantallas y acceso al usuario actual.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.Application Application
        {
            get
            {
                return global::LightSwitchApplication.Application.Current;
            }
        }
        
        /// <summary>
        /// Obtiene el área de trabajo de datos contenedora. Dicha área proporciona acceso a todos los orígenes de datos de la aplicación.
        /// </summary>
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.LightSwitch.BuildTasks.CodeGen", "14.0.0.0")]
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        private global::LightSwitchApplication.DataWorkspace DataWorkspace
        {
            get
            {
                return (global::LightSwitchApplication.DataWorkspace)this.Details.DataWorkspace;
            }
        }
        
        #endregion
    
        #region Server Interceptions Points
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanInsert(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanUpdate(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanDelete(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_CanRead(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserting(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Inserted(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updating(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Updated(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleting(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Deleted(global::LightSwitchApplication.EmployeesItem entity);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Validate(global::LightSwitchApplication.EmployeesItem entity, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder results);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Employees_Filter(ref global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeesItem, bool>> filter);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_CanExecute(ref bool result);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executing();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_Executed();
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void SaveChanges_ExecuteFailed(global::System.Exception exception);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executing(global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_Executed(global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void Query_ExecuteFailed(global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor);
    
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        partial void NorthwindData1_InitializingConnection(global::Microsoft.LightSwitch.DatabaseConnectionState state);
    
        #endregion
    
        #region Details Class
    
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Design", "CA1034:NestedTypesShouldNotBeVisible")]
        public static new class DetailsClass
        {
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1810:InitializeReferenceTypeStaticFieldsInline")]
            static DetailsClass()
            {
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindData1Service, global::LightSwitchApplication.EmployeesItem>
                __EmployeesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.EntitySetEntry<global::LightSwitchApplication.NorthwindData1Service, global::LightSwitchApplication.EmployeesItem>(
                    "Employees",
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_CanInsert,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_CanUpdate,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_CanDelete,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_CanRead,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Inserting,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Inserted,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Updating,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Updated,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Deleting,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Deleted,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Validate,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Employees_Filter);
            private static bool __Employees_CanInsert(global::LightSwitchApplication.NorthwindData1Service d)
            {
                bool result = true;
                d.Employees_CanInsert(ref result);
                return result;
            }
            private static bool __Employees_CanUpdate(global::LightSwitchApplication.NorthwindData1Service d)
            {
                bool result = true;
                d.Employees_CanUpdate(ref result);
                return result;
            }
            private static bool __Employees_CanDelete(global::LightSwitchApplication.NorthwindData1Service d)
            {
                bool result = true;
                d.Employees_CanDelete(ref result);
                return result;
            }
            private static bool __Employees_CanRead(global::LightSwitchApplication.NorthwindData1Service d)
            {
                bool result = true;
                d.Employees_CanRead(ref result);
                return result;
            }
            private static void __Employees_Inserting(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Inserting(e);
            }
            private static void __Employees_Inserted(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Inserted(e);
            }
            private static void __Employees_Updating(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Updating(e);
            }
            private static void __Employees_Updated(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Updated(e);
            }
            private static void __Employees_Deleting(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Deleting(e);
            }
            private static void __Employees_Deleted(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e)
            {
                d.Employees_Deleted(e);
            }
            private static void __Employees_Validate(global::LightSwitchApplication.NorthwindData1Service d, global::LightSwitchApplication.EmployeesItem e, global::Microsoft.LightSwitch.EntitySetValidationResultsBuilder r)
            {
                d.Employees_Validate(e, r);
            }
            private static global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeesItem, bool>> __Employees_Filter(global::LightSwitchApplication.NorthwindData1Service d)
            {
                global::System.Linq.Expressions.Expression<global::System.Func<global::LightSwitchApplication.EmployeesItem, bool>> filter = null;
                d.Employees_Filter(ref filter);
                return filter;
            }
            
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.NorthwindData1Service>
                __SaveChangesEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.OperationEntry<global::LightSwitchApplication.NorthwindData1Service>(
                    "SaveChanges",
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__SaveChanges_CanExecute,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__SaveChanges_Executing,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__SaveChanges_Executed,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__SaveChanges_Failed);
            private static bool __SaveChanges_CanExecute(global::LightSwitchApplication.NorthwindData1Service d, bool r)
            {
                d.SaveChanges_CanExecute(ref r);
                return r;
            }
            private static void __SaveChanges_Executing(global::LightSwitchApplication.NorthwindData1Service d, object[] args)
            {
                d.SaveChanges_Executing();
            }
            private static void __SaveChanges_Executed(global::LightSwitchApplication.NorthwindData1Service d, object[] args)
            {
                d.SaveChanges_Executed();
            }
            private static void __SaveChanges_Failed(global::LightSwitchApplication.NorthwindData1Service d, object[] args, global::System.Exception ex)
            {
                d.SaveChanges_ExecuteFailed(ex);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.NorthwindData1Service>
                ___QueryEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.QueryEntry<global::LightSwitchApplication.NorthwindData1Service>(
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Query_Executing,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Query_Executed,
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__Query_Failed);
            private static void __Query_Executing(global::LightSwitchApplication.NorthwindData1Service d, global::Microsoft.LightSwitch.QueryExecutingDescriptor queryDescriptor)
            {
                d.Query_Executing(queryDescriptor);
            }
            private static void __Query_Executed(global::LightSwitchApplication.NorthwindData1Service d, global::Microsoft.LightSwitch.QueryExecutedDescriptor queryDescriptor)
            {
                d.Query_Executed(queryDescriptor);
            }
            private static void __Query_Failed(global::LightSwitchApplication.NorthwindData1Service d, global::Microsoft.LightSwitch.QueryExecuteFailedDescriptor queryDescriptor)
            {
                d.Query_ExecuteFailed(queryDescriptor);
            }
    
            [global::System.Diagnostics.CodeAnalysis.SuppressMessage("Microsoft.Performance", "CA1823:AvoidUnusedPrivateFields")]
            [global::System.Diagnostics.DebuggerBrowsable(global::System.Diagnostics.DebuggerBrowsableState.Never)]
            private static readonly global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.NorthwindData1Service>
                ___DatabaseAuthEntry = new global::Microsoft.LightSwitch.Details.Framework.Server.DatabaseAuthEntry<global::LightSwitchApplication.NorthwindData1Service>(
                    global::LightSwitchApplication.NorthwindData1Service.DetailsClass.__NorthwindData1_InitializingConnection);
            private static void __NorthwindData1_InitializingConnection(global::LightSwitchApplication.NorthwindData1Service d, global::Microsoft.LightSwitch.DatabaseConnectionState state)
            {
                d.NorthwindData1_InitializingConnection(state);
            }
        }
    
        #endregion
    }
    
    #endregion
}
